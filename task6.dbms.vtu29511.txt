SQL> connect
Enter user-name: vtu29404
Enter password:
Connected
SQL> SET SERVEROUTPUT ON;
SQL> DECLARE
  2      total_age     NUMBER := 0;
  3      num_players   NUMBER := 0;
  4      avg_age       NUMBER := 0;
  5  BEGIN
  6      FOR player_rec IN (SELECT age FROM player) LOOP
  7          total_age := total_age + player_rec.age;
  8          num_players := num_players + 1;
  9      END LOOP;
 10      IF num_players > 0 THEN
 11          avg_age := total_age / num_players;
 12      END IF;
 13      DBMS_OUTPUT.PUT_LINE('Total Players: ' || num_players);
 14      DBMS_OUTPUT.PUT_LINE('Total Age: ' || total_age);
 15      DBMS_OUTPUT.PUT_LINE('Average Age: ' || avg_age);
 16  END;
 17  /
Total Players: 5
Total Age: 145
Average Age: 29
PL/SQL procedure successfully completed.
SQL> DECLARE
  2      v_playerid  player.playerid%TYPE := 'P106';
  3      v_fname     player.fname%TYPE := 'Rohit';
  4      v_lname     player.lname%TYPE := 'Sharma';
  5      v_age       player.age%TYPE := 37;
  6      v_dob       player.dob%TYPE := TO_DATE('30-APR-1987','DD-MON-YYYY');
  7      v_role      player.role%TYPE := 'Batsman';
  8      v_teamid    player.teamid%TYPE := 'T01';
  9  BEGIN
 10      INSERT INTO player(playerid, fname, lname, age, dob, role, teamid)
 11      VALUES (v_playerid, v_fname, v_lname, v_age, v_dob, v_role, v_teamid);
 12      DBMS_OUTPUT.PUT_LINE('Player record inserted successfully!');
 13  EXCEPTION
 14      WHEN OTHERS THEN
 15          DBMS_OUTPUT.PUT_LINE('Error inserting player: ' || SQLERRM);
 16  END;
 17  /
Player record inserted successfully!
PL/SQL procedure successfully completed.
SQL> SELECT playerid, fname, lname, role FROM player;
PLAYERID   FNAME   LNAME    ROLE
---------  ------- -------- ---------
P101       Dhoni   M.S.     Captain
P102       Rajat   Patidar  Batsman
P103       Hardik  Pandya   Allrounder
P104       Virat   Kohli    Batsman
P106       Rohit   Sharma   Batsman
SQL> CREATE OR REPLACE FUNCTION get_total_matches
  2  (p_playerid IN player.playerid%TYPE)
  3  RETURN NUMBER
  4  IS
  5      v_total_matches NUMBER;
  6  BEGIN
  7      SELECT NVL(totalmatchesplayed,0)
  8      INTO v_total_matches
  9      FROM player
 10      WHERE playerid = p_playerid;
 11      RETURN v_total_matches;
 12  EXCEPTION
 13      WHEN NO_DATA_FOUND THEN
 14          RETURN 0;
 15  END;
 16  /
Function created.
SQL> SELECT get_total_matches('P101') AS total_matches FROM dual;
TOTAL_MATCHES
--------------
5
SQL> SET SERVEROUTPUT ON;
SQL> CREATE OR REPLACE PROCEDURE print_even_players IS
  2  BEGIN
  3      FOR rec IN (SELECT playerid FROM player
  4                  WHERE MOD(TO_NUMBER(SUBSTR(playerid,-1)),2)=0
  5                  ORDER BY playerid) LOOP
  6          DBMS_OUTPUT.PUT_LINE('Even Player ID: ' || rec.playerid);
  7      END LOOP;
  8  END;
  9  /
Procedure created.
SQL> EXEC print_even_players;
Even Player ID: P102
Even Player ID: P104
PL/SQL procedure successfully completed.
SQL>commit;